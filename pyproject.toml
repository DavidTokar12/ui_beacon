[tool.poetry]
name = "ui-beacon"
version = "0.1.0"
description = ""
authors = ["David Tokar <1413david@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
openai = "^1.58.1"
python-dotenv = "^1.0.1"
tqdm = "^4.67.1"
pydantic = "^2.10.4"
mkdocs = "^1.6.1"
xmlschema = "^3.4.3"
lxml = "^5.3.0"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"
notebook = "^7.2.2"
ruff = "^0.7.2"
mypy = "^1.13.0"
pytest = "^8.3.3"
deptry = "^0.21.1"
pipdeptree = "^2.24.0"
vulture = "^2.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-exclude = [
    "docs/",
    "test/",
    "assets/"
]
fix = true
line-length = 88
target-version = "py310"

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "B904", # use 'raise ... from err'
    "B905", # use explicit 'strict=' parameter with 'zip()'
    "ERA001"
]
extend-safe-fixes = [
    "TCH", # move import from and to TYPE_CHECKING blocks
]
unfixable = [
    "ERA", # do not autoremove commented out code
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry"]
known-third-party = ["poetry.core"]
required-imports = ["from __future__ import annotations"]

[tool.mypy]
files = "src, tests"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
strict = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
exclude = [
    "docs/",
    "test/",
    "assets/"
]